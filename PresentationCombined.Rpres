COBS
========================================================
author: Jared, Jordy, Phil and Sarah 
date: 2016_12_13        
autosize: true
css: style1.css

======================================================= 
class: Jordy
![](images/COBSPIC.png) 

======================================================= 
class: Jordy
![](images/COBScomposition.png)

======================================================= 
class: Jordy
![](images/AGGdist.png)

======================================================= 
class: Jordy
![](images/sieveing.jpg)
![](images/sieve_moisture.jpg)

======================================================= 
class: Jordy
![](images/Screen Shot 2016-12-09 at 1.20.35 PM.png)

======================================================= 
class: Jordy
![](images/Types_of_Cellulase2.png)

  1. (BG) beta-glucosidase [EC:3.2.1.21] is an Endocellulase
  2. (BX) beta-D-xylosidase 4 [EC:3.2.1.37] is an Exocellulase
  3. (CB) 1,4-beta-cellobiosidase [EC:3.2.1.91] is a Cellobiase
  
Data Generation
======================================================= 
class: Jordy

1. Retrieve metagenomes from MG-RAST
2. Retrieve amino acid sequences for enzymes (EC#s) of interest
3. BLAST amino acid sequences against nucleotide sequence database
4. 3 nucleotide databases generated(one for each enzyme)
5. Blast each nuclotide db against metagenomes from soil
6. Generate count table for each enzyme (count of nuc sequences associated with our enzymes)

Summary Counts
======================================================= 
class: Jordy
```{bash}
head data/summary_counts/summary-count-21.tsv
```

Sarah
======================================================= 
class: Jordy

Data Dictionary Format
======================================================= 
class: Jordy
Sections for: 
- column name in spreadsheet
- full column name 
  - ex. veg_class = Vegetation Class
- descriptions of process
  - ex. Gas measurements in micromoles per square meter
  
Packages Used for Data Dictionary
======================================================= 
class: Jordy

- Kable
  - Creates rectangular table
  
```{r, eval=FALSE}
kable(x, format, digits = getOption("digits"), row.names = NA, col.names = NA, align, caption = NULL, format.args = list(), escape = TRUE, ...)

knitr::kable(head(data_dictionary))
```

Special Changes for Output
======================================================= 
class: Jordy
```{r, echo=FALSE}
"$\\beta$-N-acetylglucosaminidase Activity"

```
"$\\beta$-N-acetylglucosaminidase Activity"
  - Code to produce Beta symbol
  - Important for correct enzyme assignment
  
Data Dictionary Output
======================================================= 
class: Jordy
```{r, echo=FALSE}
#creating data dictionary 
data_dictionary <- data.frame(
  name = c("plot", "treatment", "sample_month", "sample_year", "crop" , "sample_block" , "agg_frac", "agrochem_addition", "crop_rot" , "land_use" , "veg_class" , "veg_class_meth" , "drain_class" , "extreme_event" , "FAO_class" , "fire_hist" , "soil_hor" , "soil_hor_meth" , "link_soil_method" , "soil_tax" , "soil_tax_meth", "pH" , "pH_meth" , "dna_mix" , "land_use_pre", "siev_size", "slope_grad" , "soil_type" , "soil_type_meth" , "store_cond" , "sand", "silt", "clay", "texture_meth" , "till" , "total_N" , "total_N_meth", "soil_water" , "soil_water_meth" , "total_C" , "misc_param_1" , "MBN_dry" , "MBN_applied" , "Ext_C_dry" , "Ext_C_applied" , "Ext_C_N_dry" , "Ext_N_applied" , "Bulk_dense" , "Ext_P_dry" , "AMF_col" , "AP_act" , "BG_act" , "BX_act" , "CB_act" , "NAG_act" , "Sum_C_act" , "MBC_dry" , "MBC_applied" , "MBC_MBN_meth" , "Ext_C_Ext_N_meth" , "AMF_col_meth" , "root_bm" , "root_dep" , "AMF_col_bm" , "MBC:MBN" , "MWD" , "agg_frac_prop" , "N2O_2011" , "CH4_2011" , "N2O_2012" , "CO2_2011" , "CO2_2012"),
  column = c("Plot", "Treatment", "Sample Month", "Sample Year", "Crop", "Sample Block", "Aggregate Fraction", "Agrochemical Addition", "Crop Rotation", "Current Land Use", "Vegetation Class", "Vegetation Class Method", "Drainage Class", "Extreme Events", "FAO Soil Class", "Fire History", "Soil Horizon", "Soil Horizon Method", "Link to Soil Horizon Method", "Soil Taxonomy", "Soil Taxonomy Method", "pH", "pH Method", "Presence and Number of Mixed DNA Extractions", "Previous Land Use", "Size of Sieve", "Slope Gradient", "Soil Type", "Soil Type Method", "Condition of Stored Soil Sample", "Sand", "Silt", "Clay", "Soil Texture Method", "Tillage Type", "Total Nitrogen", "Total Nitrogen Method", "Soil Water Content", "Soil Water Content Method", "Total Carbon", "Miscellaneous Parameter 1", "Microbial Biomass Nitrogen Dry", "Microbial Biomass Nitrogen Applied", "Extractable Carbon Dry", "Extractable Carbon Applied", "Extractable Carbon and Nitrogen Dry", "Extractable Nitrogen Applied", "Bulk Density", "Extractable Phosphorous Dry", "AMF Colony", "Acid Phosphatase Activity", "$\\beta$-Glucosidase Activity", "$\\beta$-Xylosidase Activity", "Cellobiohyrolase Activity", "$\\beta$-N-acetylglucosaminidase Activity", "Sum Carbon Activity", "Microbial Biomass Carbon Dry", "Microbial Biomass Carbon Applied", "Microbial Carbon and Nitrogen Method", "Extractable Carbon and Nitrogen Analysis Method", "AMF Colony Method", "Root Biomass", "Root Depth", "AMF Colony Biomass", "Microbial Carbon:Microbial Nitrogen Ratio",	"Mean Weight Diameter", "Aggregate Fraction", "Nitrous Oxide Measurements 2011", "Methane Measurements 2011", "Nitrous Oxide Measurements 2012", "Carbon Dioxide Measurements 2011", "Carbon Dioxide Measurements 2012"),
  description = c("Plot sample was taken from", "Treatment number plot received", "Month the sample was taken", "Year the sample was taken", "Cropping system", "Experimental block", "Fraction of aggregate", "Addition of fertilizers, pesticides, amount and time of applications", "Whether or not crop is rotated, and if yes, rotation schedule", "Current land use of sample site", "Vegetation classification", "Method of vegetation classification", "Drainage classification", "Unusual physical events that may have affected microbial populations", "Soil classification from the FAO World Reference Database for Soil Resources", "Historical and/or physical evidence of fire", "Layer of soil which exhibits physical characteristics that vary compared to the layers above and beneath", "Method used in determining the horizon", "Web link to digitized soil maps or other soil classification information", "Soil classification based on local soil classification system", "Method used in determining the local soil classification", "pH measurement", "Method for determining pH", "Number of mixed DNA extractions (string(???)) Only one DNA extraction used (no)", "Previous land use and dates of recorded history", "Size of sieve in millimeters", "The angle between ground surface and a horizontal line in percent", "Soil series name or other lower-level classification", "Method used in determining soil series name or other lower-level classification", "How and for how long the soil sample was stored before DNA extraction", "Relative proportion of percent sand (50 um to 2 mm)", "Relative proportion of silt (2 um to 50 um)", "Relative proportion of clay (<2 um)", "Method used in determining soil texture", "Method used for tilling", "Total nitrogen content of the soil in grams of Nitrogen per kilogram of soil", "Method used in determining the total Nitrogen", "Water content (g/g or cm3/cm3) in soil", "Method used in determining the water content of soil", "Total Carbon in mg/g", "Any other measurement performed or parameter collected that is not listed here", "Amount of Nitrogen in the microbial biomass in micrograms of Nitrogen per 1 gram of dry soil", "CFE	MBN gN m-2", "Extractable Carbon in micrograms of Carbon per gram of dry soil", "Extractable Carbon in grams of Carbon per square meter","Extractable Carbon in micrograms of Nitrogen per gram of dry soil", "Extractable Nitrogen in grams of Carbon per square meter", "Bulk density in grams per cubed centimeter", "Extractable Phosphorous using Bray's extraction method in milligras per kilogram of dry soil", "Percentage of Community of arbuscular mycorrhizal fungi", "Acid Phosphatase (AP) Activity in nanomoles of hydrogen per gram of dry aggregate", "$\\beta$-Glucosidase (BG) Activity in nanomoles of hydrogen per gram of dry aggregate", "$\\beta$-Xylosidase (BX) Activity in nanomoles of hydrogen per gram of dry aggregate", "Cellobiohyrolase (CB) Activity in nanomoles of hydrogen per gram of dry aggregate", "$\\beta$-N-acetylglucosaminidase (NAG) Activity in nanomoles of hydrogen per gram of dry aggregate", "Sum of Carbon activity in nanomoles of hydrogen per gram of dry aggregate", "BG + BX + CB	MBC ugC g-1 dry soil CFE", "MBC gC m-2 CFE", "Method for Carbon and Nitrogen analysis in microbial", "Method for extractable Carbon and Nitrogen analysis", "Method for Community of arbuscular mycorrhizal fungi", "Amount of root biomass in megagrams per hectare", "Depth of roots in centimeters", "Biomass of Community of arbuscular mycorrhizal fungi", "Ratio of microbial biomass carbon to nitrogen",	"Mean Weight Diameter in micromoles", "Proportion of aggregate fraction", "Nitrous Oxide Measurements 2011 in micromoles per square meter", "Methane Measurements 2011 in micromoles per square meter", "Nitrous Oxide Measurements 2012 in micromoles per square meter", "Carbon Dioxide Measurements 2011 in micromoles per square meter", "Carbon Dioxide Measurements 2012 in micromoles per square meter"))

knitr::kable(head(data_dictionary))

```

Jordy
========================================================


Tidying COBS Data
======================================================= 
class: Jordy
```{r}
cobs_data<- read.csv("data/KBase_MGRast_Metadata_9May2013_EMB.csv", stringsAsFactors = FALSE)
library(tidyverse)
head(cobs_data, 3)
```

Editing 1
======================================================= 
class: Jordy
```{r}
colnames(cobs_data)<-c("sample_Id" , "sample_month" , "sample_year" , "crop" , "sample_block" , "agg_frac" , "MGRAST_Id" , "agrochem_addition" , "crop_rot" , "land_use" , "veg_class" , "veg_class_meth" , "drain_class" , "extreme_event" , "FAO_class" , "fire_hist" , "soil_hor" , "soil_hor_meth" , "link_soil_method" , "soil_tax" , "soil_tax_meth" , "MGRAST_Id" , "micro_bm" , "micro_bm_meth" , "misc_param" , "pH" , "pH_meth" , "dna_mix" , "land_use_pre" , "land_use_pre_meth" , "sample_position" , "salinity_meth" , "sample_wt_dna" , "siev_size" , "slope_aspect" , "slope_grad" , "soil_type" , "soil_type_meth" , "store_cond" , "texture" , "texture_meth" , "till" , "total_N" , "total_N_meth" , "total_OC_meth" , "total_OC" , "soil_water" , "soil_water_meth" , "total_C" , "misc_param_1" , "MBN_dry" , "MBN_applied" , "Ext_C_dry" , "Ext_C_applied" , "Ext_C_N_dry" , "Ext_N_applied" , "Bulk_dense" , "Ext_P_dry" , "AMF_col" , "AP_act" , "BG_act" , "BX_act" , "CB_act" , "NAG_act" , "Sum_C_act" , "MBC_dry" , "MBC_applied" , "MBC_MBN_meth" , "Ext_C_Ext_N_meth" , "AMF_col_meth" , "root_bm" , "root_dep" , "AMF_col_bm" , "MBC:MBN" , "MWD" , "agg_frac_prop" , "N2O_2011" , "CH4_2011" , "N2O_2012" , "CO2_2011" , "CO2_2012")
```
- Editing of column names
```{r}
to_remove <- names(which(table(names(cobs_data)) > 1))
cobs_updated <- cobs_data[-1, !(to_remove == names(cobs_data))]
```
- Deletion of duplicates/first row

Result
======================================================= 
class: Jordy
```{r}
head(cobs_updated, 3)
```

Tidying 2
======================================================= 
class: Jordy
```{r}
table(cobs_updated$total_OC_meth)

empty <- numeric(0)
for(i in 1:ncol(cobs_updated)){
  if(sum(cobs_updated[, i] == "") == nrow(cobs_updated)) {
   empty <- c(empty, i)
  }
}
subset_cobs <- select(cobs_updated, -empty)
```
- Finding blank/null columns & subsetting
```{r}
parsed_cobs <- subset_cobs %>%
  separate("texture", into = c("sand", "silt", "clay"), sep=",") %>%
  separate(sample_Id, into = c("plot_treatment", "agg_fraction", "date"), sep="-")

parsed_cobs[2:3]<- list(NULL)
```
- Parsing & deleting

Regex 
======================================================= 
class: Jordy
```{r}
library(stringi)

parsed_cobs$plot <- unlist(stri_extract_all_regex(parsed_cobs$plot_treatment, pattern = "[0-9]+"))
parsed_cobs$treatment <- unlist(stri_extract_all_regex(parsed_cobs$plot_treatment, pattern = "[A-Z]+"))
```
- Using new functions!
```{r}
tidy_cobs <- select(parsed_cobs, plot, treatment, sample_month:CO2_2012)
```
- Final subsetting

End Result
======================================================= 
class: Jordy
```{r}
head(tidy_cobs, 3)
```

Phil
======================================================= 
class: Jordy
```{r, eval=FALSE}
#Read in the abundance, meta and link tables
BG_abun=read.table("~/Desktop/590/summary-count-21.tsv",header=T)
BX_abun=read.table("~/Desktop/590/summary-count-37.tsv",header=T)
CB_abun=read.table("~/Desktop/590/summary-count-91.tsv",header=T)
meta=read.csv("~/Desktop/590/Tidy_Cobs.csv")
smplnk=read.csv("~/Desktop/590/SampleLink4.csv")

#Transpose each data frame and modify rownames so they all match
BG.t=data.frame(t(BG_abun))
BG.t$row=row.names(BG.t)
BG.t$row=gsub("_R1", "", BG.t$row)
BG.t$row=gsub("_R2", "", BG.t$row)
BX.t=data.frame(t(BX_abun))
BX.t$row=row.names(BX.t)
BX.t$row=gsub("_R1", "", BX.t$row)
BX.t$row=gsub("_R2", "", BX.t$row)
CB.t=data.frame(t(CB_abun))
CB.t$row=row.names(CB.t)
CB.t$row=gsub("_R1", "", CB.t$row)
CB.t$row=gsub("_R2", "", CB.t$row)
meta$agg_frac<-gsub("micro", "Micro", meta$agg_frac)
meta$group<-paste(meta$treatment, meta$plot, sep="")
meta$myear<-paste(meta$sample_month, meta$sample_year, sep="")
meta$SampleName<-paste(meta$group, meta$agg_frac, meta$myear, sep="-")

#Merge transposed count tables with link tables
smplnkBG=merge(BG.t,smplnk,by.x="row",by.y="rast_file")
smplnkBX=merge(BX.t,smplnk,by.x="row",by.y="rast_file")
smplnkCB=merge(CB.t,smplnk,by.x="row",by.y="rast_file")
mergedataBG=merge(meta,smplnkBG, by.x = "SampleName", by.y = "SampleName")
mergedataBX=merge(meta,smplnkBX, by.x = "SampleName", by.y = "SampleName")
mergedataCB=merge(meta,smplnkCB, by.x = "SampleName", by.y = "SampleName")
```
Phil
======================================================= 
class: Jordy
```{r, eval=FALSE}
#Make counts numeric instead of integers
cn<-c(names(mergedataBG[, 1:77]), "SoilFrac", "Crop")
mergedataBG[, !names(mergedataBG) %in% cn] = lapply(mergedataBG[, !names(mergedataBG) %in% cn], as.numeric)
mergedataBX[, !names(mergedataBX) %in% cn] = lapply(mergedataBX[, !names(mergedataBX) %in% cn], as.numeric)
mergedataCB[, !names(mergedataCB) %in% cn] = lapply(mergedataCB[, !names(mergedataCB) %in% cn], as.numeric)

#Sum gene counts for each metagenome
countBG = rowSums(mergedataBG[,77:6291])
countBX = rowSums(mergedataBX[,77:2532])
countCB = rowSums(mergedataCB[,77:1439])
mergedataBG$BG_counts<-countBG
mergedataBX$BX_counts<-countBX
mergedataCB$CB_counts<-countCB

#Merge gene count columns into one table
mergedata = mergedataBG
mergedata$BX_counts<-paste(mergedataBX$BX_counts)
mergedata$CB_counts<-paste(mergedataCB$CB_counts)
mergedata[,6299:6301] = lapply(mergedata[,6299:6301],as.numeric)
write.csv(mergedata, "data/mergedata.csv", row.names = FALSE)
```

End Result
======================================================= 
class: Jordy
```{bash}
pwd
head 
```

```{bash, eval=TRUE}
cd ~
pwd
```

