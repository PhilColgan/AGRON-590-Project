!is.numeric(x)
x <- "hello"
if (!is.numeric(x))
x <- "hello"
if (!is.numeric(x)) {
print("Numeric input is required")
} else {
print(TRUE)
is.numeric(x)
!is.numeric(x)
x<-hello
x<- "hello"
!is.numberic(x)
if (!is.numeric(x))
x <- "hello"
if (!is.numeric(x)) {
print("Numeric input is required")
} else {
print(TRUE)
x <- "hello"
x <- c(-100, 100, 10)
if (!is.numeric(x))
x <- "hello"
if (!is.numeric(x)) {
print("Numeric input is required")
} else {
print(TRUE)
for(i in 1:2){
print(i)
}
library(dplyr)
load("data/star_wars.RData")
load("data/star_wars.RData")
load("C:/Users/Jordy/AppData/Local/Temp/star_wars-1.RData")
planet %>%
mutate(max_pop = max(population, na.rm = TRUE)) %>%
filter(population == max_pop) %>%
select(name)
planet %>%
mutate(max_pop = max(population, na.rm = TRUE)) %>%
filter(population == max_pop) %>%
planet %>%
mutate(max_pop = max(population, na.rm = TRUE)) %>%
filter(population == max_pop) %>%
select(name)
planet %>%
mutate(max_pop = max(population, na.rm = TRUE)) %>%
filter(population == max_pop) %>%
select(name)
select(name, population)
planet %>%
mutate(max_pop = max(population, na.rm = TRUE)) %>%
filter(population == max_pop) %>%
select(name, population)
head(person)
person %>%
group_by(homeworld_id) %>%
person %>%
group_by(homeworld_id) %>%
summarise(count = n()) %>%
person %>%
group_by(homeworld_id) %>%
summarise(count = n()) %>%
inner_join(planet, by = c("homeworld_id" = "planet_id")) %>%
inner_join(species, by = c("homeworld_id")) %>%
select(name.x, count, name.y) %>%
arrange(desc(count)) %>%
head(1)
person %>%
group_by(homeworld_id) %>%
summarise(count = n()) %>%
inner_join(planet, by = c("homeworld_id" = "planet_id")) %>%
inner_join(species, by = c("homeworld_id")) %>%
select(name.x, count, name.y) %>%
arrange(desc(count)) %>%
head(1)
pilot %>%
group_by(pilot_id) %>%
summarise(count = n()) %>%
inner_join(person, by=c("pilot_id" = "person_id")) %>%
arrange(desc(count)) %>%
select(name, count) %>%
head(1)
head(pilot)
head(vehicle)
left_join(person, by=c("craft_id" = "vehicle_id"))
pilot %>%
right_join(person, by=c("pilot_id, "person_id))
pilot %>%
right_join(person, by=c("pilot_id" = "person_id"))
pilot %>%
right_join
filter(is.na(pilot_id))
pilot %>%
right_join
filter(is.na(craft_id))
pilot %>%
right_join(person, by=c("pilot id" = "person_id")) %>%
filter(is.na(craft_id)) %>%
summarise(count = n())
pilot %>%
right_join(person, by=c("pilot_id" = "person_id")) %>%
filter(is.na(craft_id)) %>%
summarise(count = n())
library(ggplot2)
library(maps)
states <- map_data("state")
load("data/noaa.rdata")
load("~/_AGRON590_F16/lab/week_10/layers/data/noaa.rdata")
library(ggplot2)
library(maps)
states <- map_data("state")
load("data/noaa.rdata")
ggplot() +
geom_path(data = states, aes(x = long, y = lat, group = group)) +
geom_point(data = floats, aes(x = Longitude, y = Latitude, colour = callSign)) +
geom_point(aes(x, y), shape = "x", size = 5, data = rig) +
geom_text(aes(x, y), label = "BP Oil Rig", size = 5, data = rig, hjust = -0.1) +
xlim(c(-91, -80)) +
ylim(c(22, 32)) + coord_map()
animal <- read.csv("http://heike.github.io/rwrks/02-r-graphics/data/animal.csv")
animal <- read.csv("http://heike.github.io/rwrks/02-r-graphics/data/animal.csv")
View(animal)
ggplot()
View(states)
View(animal)
ggplot() +
geom_path(data = states, aes(x = Longitude, y = Latitude, group = group)) +
geom_point(data = animal, aes(x = Longtitude, y = Latitude, color = Species) +
geom_point(aes(x, y), shape = "x", size = 5, data = rig) +
xlim(c(-92, -80)) +
ylim(c(20, 32)) + coord_map()
ggplot() +
geom_path(data = states, aes(x = Longitude, y = Latitude, group = group)) +
geom_point(data = animal, aes(x = Longtitude, y = Latitude, color = class) +
geom_point(aes(x, y), shape = "x", size = 5, data = rig) +
xlim(c(-92, -80)) +
ylim(c(20, 32)) + coord_map()
ggplot() +
geom_path(data = states, aes(x = Longitude, y = Latitude, group = group)) +
geom_point(data = animal, aes(x = Longtitude, y = Latitude, color = class)) +
geom_point(aes(x, y), shape = "x", size = 5, data = rig) +
xlim(c(-92, -80)) +
ylim(c(20, 32)) + coord_map()
ggplot() +
geom_path(data = states, aes(x = Longitude, y = Latitude, group = group)) +
geom_point(data = animal, aes(x = Longtitude, y = Latitude, color = class)) +
geom_point(aes(x, y), shape = "x", size = 5, data = rig) +
xlim(c(-92, -80)) +
ylim(c(20, 32)) + coord_map()
ggplot() +
geom_path(data = states, aes(x = Longitude, y = Latitude, group = group)) +
geom_point(data = animal, aes(x = Longitude, y = Latitude, color = class)) +
geom_point(aes(x, y), shape = "x", size = 5, data = rig) +
xlim(c(-92, -80)) +
ylim(c(20, 32)) + coord_map()
ggplot() +
geom_path(data = states, aes(x = long, y = lat, group = group)) +
geom_point(data = animal, aes(x = Longitude, y = Latitude, color = class)) +
geom_point(aes(x, y), shape = "x", size = 5, data = rig) +
xlim(c(-92, -80)) +
ylim(c(20, 32)) + coord_map()
ggplot() +
geom_path(data = states, aes(x = long, y = lat, group = group)) +
geom_point(data = animal, aes(x = Longitude, y = Latitude, color = class)) +
xlim(c(-92, -80)) +
ylim(c(20, 32)) + coord_map()
View(states)
ggplot(both, aes(x=year, y=acres, group=crop, color=crop))+
geom_point()+
geom_smooth()
library(ggplot2)
ggplot(both, aes(x=year, y=acres, group=crop, color=crop))+
geom_point()+
geom_smooth()
load("~/_AGRON590_F16/lab/week_10/layers/data/noaa.rdata")
```{r}
ggplot(data=dcandmarvel, aes(x=dcandmarvel$SEX, y=dcandmarvel$APPEARANCES, fill=dcandmarvel$COMPANY))+geom_bar(stat="identity", position="dodge")
setwd('C:/Users/kmferin/Desktop/Agron_590/forked_homework/03_eda/data')
library(readr)
dc<-read_csv("dc-wikia-data.csv")
marvel <- read_csv("marvel-wikia-data.csv")
library(ggplot2)
```
dc["COMPANY"] <- "dc"
marvel["COMPANY"] <- "marvel"
#changing year header for marvel
names(marvel)[13] <- "YEAR"
dcandmarvel = rbind(dc, marvel)
setwd('C:/Users/kmferin/Desktop/Agron_590/forked_homework/03_eda/data')
setwd("~/_AGRON590_F16/Homework_3_Collaboration/03_eda/data")
library(readr)
dc<-read_csv("dc-wikia-data.csv")
marvel <- read_csv("marvel-wikia-data.csv")
dc["COMPANY"] <- "dc"
marvel["COMPANY"] <- "marvel"
names(marvel)[13] <- "YEAR"
dcandmarvel = rbind(dc, marvel)
qplot(data=marvel, marvel$YEAR, marvel$APPEARANCES, color=marvel$SEX)
qplot(data=dc, dc$YEAR, dc$APPEARANCES, color=dc$SEX)
my_theme<-theme_bw()+
theme(#panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
#panel.background = element_blank(),
axis.line = element_line(),
legend.position=c(.27,.84), legend.title=element_blank(),
legend.text = element_text(size=20),legend.key.size=unit(1, "cm"),
plot.title = element_text(size = 22, face = "bold"),
axis.title.x = element_text(size=22,vjust=-0.5),
axis.title.y = element_text(size=22,angle=90),
axis.text.x = element_text(colour="black", size=20),
axis.text.y = element_text(colour="black", size=20))
ggplot(data=dcandmarvel, aes(x=dcandmarvel$SEX, y=dcandmarvel$APPEARANCES, fill=dcandmarvel$COMPANY))+geom_bar(stat="identity", position="dodge")
my_theme<-theme_bw()+
theme(#panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
#panel.background = element_blank(),
axis.line = element_line(),
legend.position=c(.27,.84), legend.title=element_blank(),
legend.text = element_text(size=20),legend.key.size=unit(1, "cm"),
plot.title = element_text(size = 22, face = "bold"),
axis.title.x = element_text(size=22,vjust=-0.5),
axis.title.y = element_text(size=22,angle=90),
axis.text.x = element_text(colour="black", size=20),
axis.text.y = element_text(colour="black", size=20))
ggplot(data=dcandmarvel, aes(x=dcandmarvel$SEX, y=dcandmarvel$APPEARANCES,
my_theme<-theme_bw()+
theme(#panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
#panel.background = element_blank(),
axis.line = element_line(),
legend.position=c(.27,.84), legend.title=element_blank(),
legend.text = element_text(size=20),legend.key.size=unit(1, "cm"),
plot.title = element_text(size = 22, face = "bold"),
axis.title.x = element_text(size=22,vjust=-0.5),
axis.title.y = element_text(size=22,angle=90),
axis.text.x = element_text(colour="black", size=20),
axis.text.y = element_text(colour="black", size=20))
theme_set(theme_bw())
ggplot(dcandmarvel, aes(x=SEX, y=APPEARANCES, group=COMPANY, color= COMPANY, shape= COMPANY))+
geom_point(size=3, alpha = .6)+
geom_smooth()+
ggtitle("Appearance of Gender in Comics- DC and Marvel ")+
labs(x = "Sex",y = "Appearances") +
theme(#panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
#panel.background = element_blank(),
axis.line = element_line(),
legend.position=c(.27,.84), legend.title=element_blank(),
legend.text = element_text(size=20),
legend.key.size=unit(1, "cm"),
axis.title.x = element_text(size=22,vjust=-0.5),
axis.title.y = element_text(size=22,angle=90),
axis.text.x = element_text(colour="black", size=20),
axis.text.y = element_text(colour="black", size=20))
View(dcandmarvel)
theme_set(theme_bw())
ggplot(dcandmarvel, aes(x=ALIGN, y=APPEARANCES, group=SEX, color= SEX, shape= COMPANY))+
geom_point(size=3, alpha = .6)+
geom_smooth()+
ggtitle("Appearance of Gender in Comics- DC and Marvel ")+
labs(x = "Sex",y = "Appearances") +
theme(#panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
#panel.background = element_blank(),
axis.line = element_line(),
legend.position=c(.27,.84), legend.title=element_blank(),
legend.text = element_text(size=20),
legend.key.size=unit(1, "cm"),
axis.title.x = element_text(size=22,vjust=-0.5),
axis.title.y = element_text(size=22,angle=90),
axis.text.x = element_text(colour="black", size=20),
axis.text.y = element_text(colour="black", size=20))
theme_set(theme_bw())
ggplot(dcandmarvel, aes(x=ALIGN, y=APPEARANCES, group=SEX, color= SEX, shape= COMPANY))+
geom_point(size=3, alpha = .6)+
geom_smooth()+
ggtitle("Appearance of Gender in Comics- DC and Marvel ")+
labs(x = "Se",y = "Appearances") +
theme(#panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
#panel.background = element_blank(),
axis.line = element_line(),
legend.position=c(.27,.84), legend.title=element_blank(),
legend.text = element_text(size=14),
legend.key.size=unit(1, "cm"),
axis.title.x = element_text(size=22,vjust=-0.5),
axis.title.y = element_text(size=22,angle=90),
axis.text.x = element_text(colour="black", size=20),
axis.text.y = element_text(colour="black", size=20))
theme_set(theme_bw())
ggplot(dcandmarvel, aes(x=ALIGN, y=APPEARANCES, group=SEX, color= SEX, shape= COMPANY))+
geom_point(size=3, alpha = .6)+
geom_smooth()+
ggtitle("Appearance of Gender in Comics- DC and Marvel ")+
labs(x = "Se",y = "Appearances") +
theme(#panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
#panel.background = element_blank(),
axis.line = element_line(),
legend.position=c(.27,.84), legend.title=element_blank(),
legend.text = element_text(size=14),
legend.key.size=unit(1, "cm"),
axis.title.x = element_text(size=22,vjust=-0.5),
axis.title.y = element_text(size=22,angle=90),
axis.text.x = element_text(colour="black", size=12),
axis.text.y = element_text(colour="black", size=12))
## ---- echo=FALSE---------------------------------------------------------
library(ggplot2)
install.packages(c("dplyr" , "ggplot2"))
install.packages(c("dplyr", "ggplot2"))
install.packages(c("dplyr", "ggplot2"))
install.packages(c("dplyr", "ggplot2"))
install.packages(c("dplyr" , "ggplot2"))
install.packages(c("dplyr", "ggplot2"))
install.packages(c("dplyr", "ggplot2"))
getwd()
setwd("~/_AGRON590_F16/AGRON-590-Project/data")
setwd("~/_AGRON590_F16/AGRON-590-Project")
cobs_data<- read.csv("data/KBase_MGRast_Metadata_9May2013_EMB.csv")
cobs_data<- read.csv("data/KBase_MGRast_Metadata_9May2013_EMB.csv")
View(cobs_data)
install.packages(c("dplyr" , "ggplot2"))
install.packages(c("dplyr" , "ggplot2"))
sample_ID<- data=sample_name
colnames(sample_name = sample_ID)
colnames(sample_ID)<- data.sample_name
colnames(sample_ID)<- cobs_data$sample_name
colnames(sample_name)<- cobs_data$sample_ID
colnames(cobs_data)"sample_name"<- "sample_ID"
colnames(cobs_data)(c("sample_name")<- "sample_ID"
View(cobs_data)
View(cobs_data)
colnames(cobs_data)(c("sample_name")<- "sample_ID"
View(cobs_data)
View(cobs_data)
View(cobs_data)
colnames(cobs_data)<-c("sample_name = sample_ID")
